<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.3" maxVersion="1.9" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
  <Properties>
    <Property name="defaultCloseOperation" type="int" value="3"/>
    <Property name="undecorated" type="boolean" value="true"/>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
    <SyntheticProperty name="generateCenter" type="boolean" value="false"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
  </AuxValues>

  <Layout>
    <DimensionLayout dim="0">
      <Group type="103" groupAlignment="0" attributes="0">
          <Component id="jPanel1" alignment="0" max="32767" attributes="0"/>
      </Group>
    </DimensionLayout>
    <DimensionLayout dim="1">
      <Group type="103" groupAlignment="0" attributes="0">
          <Component id="jPanel1" alignment="0" max="32767" attributes="0"/>
      </Group>
    </DimensionLayout>
  </Layout>
  <SubComponents>
    <Container class="javax.swing.JPanel" name="jPanel1">
      <Properties>
        <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
          <Color blue="ff" green="ff" red="ff" type="rgb"/>
        </Property>
      </Properties>

      <Layout>
        <DimensionLayout dim="0">
          <Group type="103" groupAlignment="0" attributes="0">
              <Component id="jPanel2" max="32767" attributes="0"/>
              <Component id="jScrollPane1" alignment="0" max="32767" attributes="0"/>
              <Group type="102" alignment="0" attributes="0">
                  <EmptySpace min="-2" pref="33" max="-2" attributes="0"/>
                  <Component id="jButton1" min="-2" pref="203" max="-2" attributes="0"/>
                  <EmptySpace pref="142" max="32767" attributes="0"/>
                  <Component id="jButton3" min="-2" pref="225" max="-2" attributes="0"/>
                  <EmptySpace min="-2" pref="162" max="-2" attributes="0"/>
                  <Component id="jButton4" min="-2" pref="219" max="-2" attributes="0"/>
                  <EmptySpace min="-2" pref="31" max="-2" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
        <DimensionLayout dim="1">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" alignment="0" attributes="0">
                  <Component id="jPanel2" min="-2" max="-2" attributes="0"/>
                  <EmptySpace max="-2" attributes="0"/>
                  <Component id="jScrollPane1" pref="383" max="32767" attributes="0"/>
                  <EmptySpace type="separate" max="-2" attributes="0"/>
                  <Group type="103" groupAlignment="0" max="-2" attributes="0">
                      <Component id="jButton1" pref="58" max="32767" attributes="0"/>
                      <Component id="jButton3" alignment="1" max="32767" attributes="0"/>
                      <Component id="jButton4" max="32767" attributes="0"/>
                  </Group>
                  <EmptySpace min="-2" pref="51" max="-2" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
      </Layout>
      <SubComponents>
        <Container class="javax.swing.JPanel" name="jPanel2">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="ff" green="33" red="66" type="rgb"/>
            </Property>
          </Properties>

          <Layout>
            <DimensionLayout dim="0">
              <Group type="103" groupAlignment="0" attributes="0">
                  <Group type="102" alignment="0" attributes="0">
                      <EmptySpace max="32767" attributes="0"/>
                      <Component id="label1" min="-2" pref="230" max="-2" attributes="0"/>
                      <EmptySpace min="-2" pref="280" max="-2" attributes="0"/>
                      <Component id="Mini" min="-2" pref="50" max="-2" attributes="0"/>
                      <EmptySpace max="-2" attributes="0"/>
                      <Component id="Exit" min="-2" pref="50" max="-2" attributes="0"/>
                      <EmptySpace max="-2" attributes="0"/>
                  </Group>
              </Group>
            </DimensionLayout>
            <DimensionLayout dim="1">
              <Group type="103" groupAlignment="0" attributes="0">
                  <Group type="102" attributes="0">
                      <Group type="103" groupAlignment="0" attributes="0">
                          <Component id="Mini" alignment="0" min="-2" pref="50" max="-2" attributes="0"/>
                          <Component id="Exit" alignment="0" min="-2" pref="50" max="-2" attributes="0"/>
                      </Group>
                      <EmptySpace min="0" pref="0" max="32767" attributes="0"/>
                  </Group>
                  <Group type="102" alignment="0" attributes="0">
                      <EmptySpace max="-2" attributes="0"/>
                      <Component id="label1" pref="77" max="32767" attributes="0"/>
                      <EmptySpace max="-2" attributes="0"/>
                  </Group>
              </Group>
            </DimensionLayout>
          </Layout>
          <SubComponents>
            <Component class="java.awt.Label" name="label1">
              <Properties>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="Dialog" size="36" style="1"/>
                </Property>
                <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
                  <Color blue="ff" green="ff" red="ff" type="rgb"/>
                </Property>
                <Property name="name" type="java.lang.String" value="" noResource="true"/>
                <Property name="text" type="java.lang.String" value="Quick Sort"/>
              </Properties>
            </Component>
            <Component class="javax.swing.JButton" name="Mini">
              <Properties>
                <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
                  <Color blue="dd" green="48" red="7a" type="rgb"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/Icon/icons8_Minimize_Window_25px_2.png"/>
                </Property>
                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
                  <Border info="null"/>
                </Property>
                <Property name="borderPainted" type="boolean" value="false"/>
                <Property name="contentAreaFilled" type="boolean" value="false"/>
                <Property name="focusPainted" type="boolean" value="false"/>
                <Property name="focusable" type="boolean" value="false"/>
                <Property name="requestFocusEnabled" type="boolean" value="false"/>
                <Property name="verifyInputWhenFocusTarget" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="mouseClicked" listener="java.awt.event.MouseListener" parameters="java.awt.event.MouseEvent" handler="MiniMouseClicked"/>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="MiniActionPerformed"/>
              </Events>
            </Component>
            <Component class="javax.swing.JLabel" name="Exit">
              <Properties>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="Jokerman" size="24" style="1"/>
                </Property>
                <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
                  <Color blue="ff" green="ff" red="ff" type="rgb"/>
                </Property>
                <Property name="horizontalAlignment" type="int" value="0"/>
                <Property name="text" type="java.lang.String" value="X "/>
              </Properties>
              <Events>
                <EventHandler event="mouseClicked" listener="java.awt.event.MouseListener" parameters="java.awt.event.MouseEvent" handler="ExitMouseClicked"/>
              </Events>
            </Component>
          </SubComponents>
        </Container>
        <Container class="javax.swing.JScrollPane" name="jScrollPane1">
          <AuxValues>
            <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
          </AuxValues>

          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
          <SubComponents>
            <Component class="javax.swing.JTextArea" name="jTextArea1">
              <Properties>
                <Property name="columns" type="int" value="20"/>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="Tahoma" size="21" style="1"/>
                </Property>
                <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
                  <Color blue="ff" green="33" red="66" type="rgb"/>
                </Property>
                <Property name="rows" type="int" value="5"/>
                <Property name="text" type="java.lang.String" value="                                                                 Quicksort&#xa;&#xa;  Quicksort is an in-place sorting algorithm. Developed by British computer scientist Tony &#xa;  Hoare in 1959[1] and published in 1961,[2] it is still a commonly used algorithm for&#xa;  sorting. When implemented well, it can be somewhat faster than merge sort and about&#xa;  two or three times faster than heapsort.[3][contradictory]&#xa;&#xa;  Quicksort is a divide-and-conquer algorithm. It works by selecting a &apos;pivot&apos; element from&#xa;  the array and partitioning the other elements into two sub-arrays, according to whether&#xa;  they are less than or greater than the pivot. For this reason, it is sometimes called &#xa;  partition-exchange sort.[4] The sub-arrays are then sorted recursively. This can be done&#xa;  in-place, requiring small additional amounts of memory to perform the sorting.&#xa;&#xa;  Quicksort is a comparison sort, meaning that it can sort items of any type for which a&#xa;  &quot;less-than&quot; relation (formally, a total order) is defined. Efficient implementations of &#xa;  Quicksort are not a stable sort, meaning that the relative order of equal sort items is not&#xa;  preserved.&#xa;&#xa;  Mathematical analysis of quicksort shows that, on average, the algorithm takes&#xa;  O(n log n) comparisons to sort n items. In the worst case, it makes O(n2) comparisons,&#xa;  though this behavior is rare.&#xa; &#xa;  Algorithm&#xa;&#xa;  Full example of quicksort on a random set of numbers. The shaded element is the pivot.&#xa;  It is always chosen as the last element of the partition. However, always choosing the &#xa;  last element in the partition as the pivot in this way results in poor performance (O(n&#xb2;)) on already sorted arrays, or arrays of identical elements. Since sub-arrays of sorted / identical elements crop up a lot towards the end of a sorting procedure on a large set, versions of the quicksort algorithm that choose the pivot as the middle element run much more quickly than the algorithm described in this diagram on large sets of numbers.&#xa;  Quicksort is a type of divide and conquer algorithm for sorting an array, based on a&#xa;  partitioning routine; the details of this partitioning can vary somewhat, so that &#xa;  quicksort is really a family of closely related algorithms. Applied to a range of at least&#xa;  two elements, partitioning produces a division into two consecutive non empty &#xa;  sub-ranges, in such a way that no element of the first sub-range is greater than any &#xa;  element of the second sub-range. After applying this partition, quicksort then recursively&#xa;  sorts the sub-ranges, possibly after excluding from them an element at the point of &#xa;  division that is at this point known to be already in its final location. Due to its recursive&#xa;  nature, quicksort (like the partition routine) has to be formulated so as to be callable for&#xa;  a range within a larger array, even if the ultimate goal is to sort a complete array. &#xa;  The steps for in-place quicksort are:&#xa;&#xa;  If the range has less than two elements, return immediately as there is nothing to do. &#xa;  Possibly for other very short lengths a special-purpose sorting method is applied and the&#xa;  remainder of these steps skipped.Otherwise pick a value, called a pivot, that occurs in the range&#xa;  (the precise manner of choosing depends on the partition routine, and can involve&#xa;  randomness).&#xa;  Partition the range: reorder its elements, while determining a point of division, so that all&#xa;  elements with values less than the pivot come before the division, while all elements &#xa;  with values greater than the pivot come after it; elements that are equal to the pivot can&#xa;  go either way. Since at least one instance of the pivot is present, most partition routines&#xa;  ensure that the value that ends up at the point of division is equal to the pivot, and is &#xa;  now in its final position (but termination of quicksort does not depend on this, as long as&#xa;  sub-ranges strictly smaller than the original are produced).&#xa;  Recursively apply the quicksort to the sub-range up to the point of division and to the&#xa;  sub-range after it, possibly excluding from both ranges the element equal to the pivot at&#xa;  the point of division. (If the partition produces a possibly larger sub-range near the&#xa;  boundary where all elements are known to be equal to the pivot, these can be excluded&#xa;  as well.)&#xa;  The choice of partition routine (including the pivot selection) and other details not&#xa;  entirely specified above can affect the algorithm&apos;s performance, possibly to a great &#xa;  extent for specific input arrays. In discussing the efficiency of quicksort, it is therefore &#xa; necessary to specify these choices first. Here we mention two specific partition methods.&#xa;&#xa;"/>
              </Properties>
            </Component>
          </SubComponents>
        </Container>
        <Component class="javax.swing.JButton" name="jButton1">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="ff" green="33" red="66" type="rgb"/>
            </Property>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Tahoma" size="24" style="1"/>
            </Property>
            <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="ff" green="ff" red="ff" type="rgb"/>
            </Property>
            <Property name="text" type="java.lang.String" value="&lt;&lt;&lt; Back"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton1ActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JButton" name="jButton3">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="ff" green="33" red="66" type="rgb"/>
            </Property>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Tahoma" size="24" style="1"/>
            </Property>
            <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="ff" green="ff" red="ff" type="rgb"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Steps"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton3ActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JButton" name="jButton4">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="ff" green="33" red="66" type="rgb"/>
            </Property>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Tahoma" size="24" style="1"/>
            </Property>
            <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="ff" green="ff" red="ff" type="rgb"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Example"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton4ActionPerformed"/>
          </Events>
        </Component>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>
